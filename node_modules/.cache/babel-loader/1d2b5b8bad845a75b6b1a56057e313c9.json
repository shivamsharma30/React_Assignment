{"ast":null,"code":"import _defineProperty from \"/home/oeadmin/React/ReactTraining/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/oeadmin/React/ReactTraining/src/containers/LogInPage/LogInPage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Login from '../../components/Login/Login';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport axios from 'axios';\nimport './LogInPage.css';\n\nclass LogInPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toastMessageHandler = message => {\n      console.log(message, \"intoast\");\n      const self = this;\n      this.setState(_objectSpread({}, this.state, {\n        show: false\n      }));\n      setTimeout(function () {\n        self.setState(_objectSpread({}, self.state, {\n          LogInMessage: message,\n          show: true\n        }));\n      }, 500);\n    };\n\n    this.validation = (username, password) => {\n      if (username === \"\" || password === \"\") {\n        this.toastMessageHandler(\"all field required\");\n      } else {\n        let regExUser = /^\\S*$/.test(username);\n        let regExPass = /^\\S*$/.test(password);\n\n        if (regExUser && regExPass) {\n          this.logInAPI(username, password);\n        } else {\n          let field = '';\n          if (!regExUser) field = \"username \";\n          if (!regExPass) field = field + \"password \";\n          this.toastMessageHandler(field + \"Invalid. space not allow\");\n        }\n      }\n    };\n\n    this.logInAPI = (username, password) => {\n      const self = this;\n      let bearer = \"Bearer YWRtaW46YWRtaW4=\";\n      let contentType = 'application/json';\n      axios({\n        method: 'post',\n        url: 'https://dev-bepsy-api.objectedge.com/oe_commerce_api/occ/v1/oauth/login',\n        data: {\n          \"username\": username,\n          //\"trupti.kashid@objectedge.com\",\n          \"password\": password //\"Objectedge$10\"\n\n        },\n        headers: {\n          \"Authorization\": bearer,\n          'Content-Type': contentType\n        }\n      }).then(function (response) {\n        //handle success\n        console.log(\"handle success\", response);\n        self.toastMessageHandler(\"Login Success\");\n      }).catch(function (response) {\n        //handle error\n        console.log(response);\n        self.toastMessageHandler(\"Login Failed Please try again\");\n      });\n    };\n\n    this.state = {\n      LogInMessage: \"\",\n      show: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"logInPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.show ? React.createElement(ToastMessage, {\n      message: this.state.LogInMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null, React.createElement(Login, {\n      validation: (username, password) => {\n        this.validation(username, password);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo4kdHSVd5HhGRolR5Jn92_rFENn53ZWWb0oYAn6bPQsbQRPXghg&s\",\n      className: \"backgroundImage\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LogInPage;","map":{"version":3,"sources":["/home/oeadmin/React/ReactTraining/src/containers/LogInPage/LogInPage.js"],"names":["React","Component","Login","ToastMessage","axios","LogInPage","constructor","props","toastMessageHandler","message","console","log","self","setState","state","show","setTimeout","LogInMessage","validation","username","password","regExUser","test","regExPass","logInAPI","field","bearer","contentType","method","url","data","headers","then","response","catch","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Login from '../../components/Login/Login';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport axios from 'axios';\nimport './LogInPage.css'\n\nclass LogInPage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            LogInMessage: \"\",\n            show : false\n        }\n    }\n\n    toastMessageHandler = (message)=>{\n        console.log(message,\"intoast\");\n        const self = this;\n        this.setState({...this.state, show:false});\n        setTimeout(function(){\n            self.setState({...self.state,LogInMessage: message, show: true});\n        },500);\n        \n    }\n\n\n    validation = (username, password)=>{\n        if(username === \"\" || password === \"\"){\n            this.toastMessageHandler(\"all field required\");\n        }\n         else{\n             let regExUser = /^\\S*$/.test(username);\n             let regExPass = /^\\S*$/.test(password);\n            if(regExUser && regExPass){\n                this.logInAPI(username, password);\n             }\n            else{\n                let field = '';\n                if(!regExUser)\n                 field = \"username \";\n                 if(!regExPass)\n                 field = field+\"password \";\n                this.toastMessageHandler(field+ \"Invalid. space not allow\"); \n            }\n        }\n        \n    }  \n\n    logInAPI = (username, password)=>{\n        const self = this;\n        let bearer = \"Bearer YWRtaW46YWRtaW4=\";\n        let contentType = 'application/json';\n        axios({\n            method: 'post',\n            url: 'https://dev-bepsy-api.objectedge.com/oe_commerce_api/occ/v1/oauth/login',\n            data: {\n                \"username\":username,//\"trupti.kashid@objectedge.com\",\n                \"password\":password//\"Objectedge$10\"\n            },\n            headers: {\n                \"Authorization\":bearer,\n                'Content-Type': contentType\n            }}).then(function (response) {\n                //handle success\n                console.log(\"handle success\",response);\n               self.toastMessageHandler(\"Login Success\");\n            }).catch(function (response) {\n                //handle error\n                console.log(response);\n                self.toastMessageHandler(\"Login Failed Please try again\");\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"logInPage\">\n                {this.state.show ? <ToastMessage message = {this.state.LogInMessage}/>: null}\n                <Login validation = {(username, password)=>{ this.validation(username, password)}}/>\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSo4kdHSVd5HhGRolR5Jn92_rFENn53ZWWb0oYAn6bPQsbQRPXghg&s\" className=\"backgroundImage\" alt=\"\"/>\n            </div>\n        );\n    }\n}\n\nexport default LogInPage;"]},"metadata":{},"sourceType":"module"}